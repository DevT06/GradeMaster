<div class="border-top generic-devider-line" style="margin-top: -1px"></div>
@if (FormType == FormType.Edit)
{
    <h4 style="margin-bottom: 25px; margin-top: 10px;  max-width: 1100px;">@FormTitle: @Subject?.Name - @Subject?.Semester</h4>
}
else
{
    <div style="margin-top: 25px;"></div>
}
<EditForm OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" EditContext="_editContext">
    <DataAnnotationsValidator/>
    <Card Style="max-width: 1050px; border: none;">
        <!-- Name Field -->
        <div class="form-group row mb-3">
            <label class="col-md-2 col-form-label nowrap" for="subjectName">
                <strong>Name: <span class="text-danger">*</span></strong>
            </label>
            <div class="col-md-10">
                <InputText @bind-Value="NewSubject.Name" id="subjectName" class="form-control" placeholder="Enter the subject name"/>
                <ValidationMessage For="@(() => NewSubject.Name)"/>
            </div>
        </div>

        <!-- Education Field -->
        <div class="form-group row mb-3">
            <label class="col-md-2 col-form-label nowrap" for="selectFieldEducation"><strong>Education: <span class="text-danger">*</span></strong></label>
            <div class="col-md-10">
                <select class="form-select" style="max-width: 620px" aria-label="Select Education" name="selectFieldEducation" id="selectFieldEducation" disabled="@(EducationId.HasValue)"
                @bind="SelectedEducationId">
                    <option value="0" class="truncate" style="background-color: #eeeeee; color: black;">Select Education</option>
                    @foreach (var education in Educations)
                    {
                        <option @key="@($"edu_{education.Id}")" value="@education.Id" class="truncate" style="background-color: #eeeeee; color: black;">@UIUtils.TruncateString(education.Name, 65) @UIUtils.TruncateString(string.IsNullOrEmpty(education.Institution) ? " " : "| " + education.Institution.Split(",")[0], 15) @(education.Completed ? "🟢" : "")</option>
                    }
                </select>
                <ValidationMessage For="@(() => NewSubject.Education)"/>
            </div>
        </div>

        <!-- Total Semesters Field -->
        <div class="form-group row mb-3">
            <label class="col-md-2 col-form-label nowrap" for="semester">
                <strong>Semester: <span class="text-danger">*</span></strong>
            </label>
            <div class="col-md-10">
                <NumberInput TValue="int" @bind-Value="NewSubject.Semester" EnableMinMax="true" Max="@(GetMaxSemesterNumber())" Min="1" Id="semester" Class="form-control" Placeholder="Enter total semesters" style="width: 155px;" />
                <ValidationMessage For="@(() => NewSubject.Semester)" />
            </div>
        </div>

        <!-- Completion State Field -->
        <div class="form-group row mb-3">
            <label class="col-md-2 col-form-label nowrap"></label>
            <div class="col-md-10">
                <label class="col-form-label nowrap" for="completionState">
                    <strong>Completion State: <span class="text-danger">*</span></strong>
                </label>
                <div class="form-check">
                    <InputCheckbox @bind-Value="NewSubject.Completed" id="completionState" class="form-check-input" disabled="@(FormType == FormType.Create)" />
                    <label class="form-check-label" for="completionState">
                        @(NewSubject.Completed ? "Completed" : "In Progress")
                    </label>
                </div>
                <ValidationMessage For="@(() => NewSubject.Completed)"/>
            </div>
        </div>

        <!-- Description Field -->
        <div class="form-group row mb-3">
            <label class="col-md-2 col-form-label nowrap" for="description">Description:</label>
            <div class="col-md-10">
                <InputTextArea @bind-Value="NewSubject.Description" id="description" class="form-control" rows="4" placeholder="Enter a description" style="max-height: 272px" />
                <ValidationMessage For="@(() => NewSubject.Description)" />
            </div>
        </div>

        <div class="border-top generic-devider-line" style="margin-top: 15px"></div>

        <!-- Buttons -->
        <div class="d-flex justify-content-between my-3">
            <Button Type="ButtonType.Button" Color="ButtonColor.Primary" @onclick="Cancel"><Icon Name="IconName.ArrowLeft"/> Cancel</Button>
            <Button Type="ButtonType.Submit" Color="ButtonColor.Success">Save <Icon Name="IconName.Floppy"/></Button>
        </div>
    </Card>
</EditForm>

<style>
    .nowrap { white-space: nowrap; }

    .truncate {
        max-width: 500px; /* Adjust the width as needed */
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
</style>

@code {
    
}