@page "/settings"

<TopPageHeader>Settings</TopPageHeader>
<br/>

<h3>Settings</h3>
<h5 style="margin-left: 20px;">Personalization</h5>
<div style="margin-left: 30px;">
    <label>Theme: </label>
    <ThemeSwitcher />
</div>

<br />

<div class="border-top" style="max-width: 800px;"></div>

<br/>

<h3>About this Application</h3>
<!--later add "feature rich"-->
<p style="margin-bottom: 0.4rem;">
    <strong>Grade Master</strong> is a grade management tool that helps you manage your education, subjects, and grades.
    <br /><br />
    <strong>Version Information:</strong>
</p>
<p style="margin-bottom: 0.5rem;">
    - <strong>Installed Version:</strong> <span id="installedVersion">2.1.1</span>
    <span id="currentInstalledVersion" class="alert alert-secondary" style="padding: 2px 5px">
        Checking...
    </span>
</p> 
<p>
    - <strong>Latest Available Version:</strong>
@*  <a href="https://github.com/DevT06/GradeMaster/releases" target="_blank">
        <img src="https://img.shields.io/github/v/release/devt06/GradeMaster" alt="Release Version Badge">
    </a> *@
    <a id="latestAvailableVersion" class="alert alert-primary" style="padding: 2px 5px; text-decoration: none;" href="https://github.com/DevT06/GradeMaster/releases" target="_blank">
        Checking...
    </a>
</p>

<NavLink class="btn btn-translucient border-dark-subtle" href="info" Match="NavLinkMatch.Prefix">
    <Icon Name="IconName.InfoCircle" /> Info
</NavLink>

<NavLink style="margin-left: 10px;" class="btn btn-translucient border-dark-subtle" href="licenses" Match="NavLinkMatch.Prefix">
    <Icon Name="IconName.FileEarmarkText" /> Licenses
</NavLink>

<div style="margin-bottom: 40px;"></div>

<h3>Help</h3>
<p>If you have any questions or need help, refer to the page below.</p>
<NavLink class="btn btn-translucient border-dark-subtle" href="faq" Match="NavLinkMatch.Prefix">
    <Icon Name="IconName.QuestionCircle" /> FAQ
</NavLink>

<div style="margin-bottom: 100px;"></div>

@* <div class="border-top" style="width: 100%;"></div> *@

<script>
    window.scrollTo({ top: 0, behavior: 'auto' });
</script>

<script>
    async function checkForUpdates() {
        const installedVersion = document.getElementById("installedVersion").innerText.trim();
        const latestVersionElement = document.getElementById("latestAvailableVersion");
        const updateStatusElement = document.getElementById("currentInstalledVersion");

        try {
            const response = await fetch("https://img.shields.io/github/v/release/devt06/GradeMaster");
            const svgText = await response.text();

            const parser = new DOMParser();
            const svgDoc = parser.parseFromString(svgText, "image/svg+xml");
            const titleElement = svgDoc.querySelector("title");

            if (titleElement) {
                const latestVersion = titleElement.textContent.replace("release: v", "").trim();
                
                // Update latest version UI
                latestVersionElement.innerText = latestVersion;

                latestVersionElement.innerHTML = `<span style="text-decoration: underline;">${latestVersion}</span> <i class="bi bi-box-arrow-up-right" style="text-decoration: none;"></i>`;

                // Compare versions
                if (installedVersion === latestVersion) {
                    updateStatusElement.innerHTML = "<i class=\"bi bi-check-circle\"></i> Up to Date";
                    // updateStatusElement.innerText = " Up to Date";
                    updateStatusElement.classList.remove("alert-warning");
                    updateStatusElement.classList.add("alert-success");
                } else {
                    updateStatusElement.innerHTML = "<i class=\"bi bi-info-circle\"></i> Update Available";
                    // updateStatusElement.innerText = "<i class=\"bi bi-exclamation-triangle-fill\"></i> Update Available";
                    updateStatusElement.classList.remove("alert-success");
                    updateStatusElement.classList.add("alert-warning");
                }
            } else {
                latestVersionElement.innerText = "Error fetching version";
            }
        } catch (error) {
            latestVersionElement.innerText = "Error fetching version";
            console.error("Error fetching latest version:", error);
        }
    }

    checkForUpdates();
</script>


@code {

}
