@page "/"

<TopPageHeader>Home</TopPageHeader>

<div class="row py-3 mx-0">
    <!--had classes: bd-navbar sticky-top / maybe reverse order (.OrderByDescending(e => e.Id)-->
    <div class="col-8 col-md-8 px-0 mb-3" style="max-width: 400px">
        <b>Education: </b>
        <select class="form-select" style="min-width: 200px; max-width: 400px" aria-label="Default select example" name="selectFieldEducation" id="selectFieldEducation"
                @bind="SelectedEducationId" @bind:event="onchange">
            <option value="" style="background-color: #eeeeee; color: black; border: solid 1px">Select Education</option>
            @foreach (var education in _educations)
            {
                <option value="@education.Id" style="background-color: #eeeeee; color: black;">@UIUtils.TruncateString(education.Name, 65)</option>
            }
        </select>
    </div>
    <!--Add edit and detail button later-->
    <div class="col-1 col-md-1 mb-3 mt-4" style="width: 38px; margin-right: 6px; padding-left: 9px;">
        <Tooltip Title="New Education" Style="padding-top: 6px;">
            <NavLink href="/educations/create" class="btn btn-primary px-2" style="height: 38px; padding-top: 3px;">
                <Icon Name="IconName.PlusCircle" Size="IconSize.x5"/>
            </NavLink>
        </Tooltip>
    </div>
    <div class="col-1 col-md-1 mb-3 mt-4" style="width: 38px">
        @* <Button Color="ButtonColor.Secondary" class="px-2" style="height: 38px; padding-top: 3px;" @onclick="ReloadData">
            <Icon Name="IconName.ArrowRepeat" Size="IconSize.x5"/>
        </Button> *@
        <Dropdown Color="DropdownColor.Secondary" style="height: 38px; padding: 0;" >
            @* <DropdownActionButton @onclick="ReloadData" class="px-2" style="padding-top: 3px;"><Icon Name="IconName.ArrowRepeat" Size="IconSize.x5" /></DropdownActionButton> *@
            <DropdownToggleButton Id="menuDropdown" class="px-1" style="width: 38px; padding-top: 3px;"><Icon Name="IconName.List" Size="IconSize.x5" /></DropdownToggleButton>
            <DropdownMenu Position="DropdownMenuPosition.End" Style="width: 100px">
                <DropdownItem @onclick="ReloadData" Type="DropdownItemType.Button">Reload <Icon Name="IconName.ArrowRepeat" /></DropdownItem>
                <DropdownItem @onclick="() => GoToEducation(_selectedEducationId.Value)" Disabled="@(!_selectedEducationId.HasValue)" Type="DropdownItemType.Button">Detail <Icon Name="IconName.Journal" /></DropdownItem>
            </DropdownMenu>
        </Dropdown>
    </div>
    <div class="col-12 col-lg-5 text-end ms-auto mb-3 mt-4" style="max-width: 320px; padding: 0; z-index: -10;"> <!--maybe add later: margin-bottom: 0 !important; again-->
        <h3 class="nowrap">Education Average: @(_educationAverage == 0 ? "N/A" : _educationAverage.ToString("0.##"))</h3>
    </div>
</div>

<!--Enable paging for large data-->
<div class="row py-4" style="padding-top: 1.4rem !important;">
    <Grid TItem="Subject"
          Class="table table-hover"
          Data="@_subjects.OrderByDescending(s => s.Semester).ThenBy(s => s.Name)"
          EmptyText="No records to display"
          HeaderRowCssClass="border-bottom-0"
          Responsive="true">

        <GridColumns>
            <GridColumn TItem="Subject" HeaderText="Subject" PropertyName="Name" Class="name-column">
                <Tooltip Title="@(context.Completed ? "Completed" : "In Progress")" Style="padding-top: 1px;">
                    <Button @onclick="() => GoToSubject(context.Id)" class="btn-translucient-v2 border-0" style="padding: 3px; font-size: initial; margin-top: 1px; margin-bottom: 1px;">@UIUtils.TruncateString(context.Name, 25) - @context.Semester</Button>
                </Tooltip>
                @* @UIUtils.TruncateString(context.Name, 21) - @context.Semester *@
            </GridColumn>
            <GridColumn TItem="Subject" HeaderText="Grades" SortKeySelector="item => item.Grades != null ? item.Grades.Count : 0" Class="grades-column">
                @if (context.Grades != null && context.Grades.Any())
                {
                    foreach (var grade in context.Grades.OrderBy(g => g.Date).ThenBy(g => g.Id))
                    {
                        if (grade.Value < 4)
                        {
                            <Tooltip Title="@grade.Date.ToShortDateString()" Style="padding-top: 1px;">
                                <Button @onclick="() => GoToGrade(grade.Id)" class="btn-translucient-red border-0" style="padding: 3px; font-size: initial; margin-top: 1px; margin-bottom: 1px; margin-right: 2px;">@grade.Value (@grade.Weight.Name)</Button>
                            </Tooltip>
                        }
                        else
                        {
                            <Tooltip Title="@grade.Date.ToShortDateString()" Style="padding-top: 1px;">
                                <Button @onclick="() => GoToGrade(grade.Id)" class="btn-translucient-v2 border-0" style="padding: 3px; font-size: initial; margin-top: 1px; margin-bottom: 1px; margin-right: 2px;">@grade.Value (@grade.Weight.Name)</Button>
                            </Tooltip>
                        }
                    }

                    @* @string.Join(" | ", context.Grades.Select(grade =>
                        $"{grade.Value} ({grade.Weight.Name}) ")) *@
                }
                else
                {
                    @* <span>No Grades </span> *@

                    <div style="display: inline-block; padding: 2px; font-size: initial; margin-top: 0; margin-bottom: 0; margin-right: 3px;">No Grades</div>
                }
                @if (!context.Completed)
                {
                    <Tooltip Title="New Grade" Style="padding-top: 1px;"><!--was height: 29px; and width: 29px; padding-left: 4pt;-->
                        <Button @onclick="() => GoToNewGrade(context.Id)" class="btn-secondary" style="height: 30px; width: 30px; padding-top: 2px; padding-left: 4.55pt; margin-top: 1px; margin-bottom: 1px;">
                            <Icon Name="IconName.PlusCircle" Size="IconSize.x6"/><!--maybe change font-size to fixed amount for example to 16px-->
                        </Button>
                    </Tooltip>
                }
                <!--Later add detail navigation to every grade-->
            </GridColumn>
            <GridColumn TItem="Subject" HeaderText="Average" SortKeySelector="item => item.Grades != null ? item.Grades.Average(g => g.Value) : 0" HeaderTextAlignment="Alignment.End" TextAlignment="Alignment.Center" Class="average-grade-column">
                @if (SubjectUtils.CalculateWeightedAverage(context.Grades) < 4 && SubjectUtils.CalculateWeightedAverage(context.Grades) != 0)
                {
                    <Badge Color="BadgeColor.Danger" IndicatorType="BadgeIndicatorType.RoundedPill" Style="font-size: initial">
                        <b>@GetAverageGrade(context.Grades)</b>
                    </Badge>
                }
                else
                {
                    <b>@GetAverageGrade(context.Grades)</b>
                }
            </GridColumn>
        </GridColumns>
    </Grid>
    <!--Later add detail of every row maybe us _selectedEducationId instead-->
    @if (_currentEducationId != 0)
    {
        if (_educations.Find(e => e.Id.Equals(_currentEducationId)).Completed)
        {
            <Tooltip Title="This Education is completed" Style="width: 185px;">
                <Button Disabled="true" @onclick="() => GoToNewSubject(_currentEducationId)" class="btn-success px-1" style="margin-left: 12px; width: 135px">
                    New Subject <i class="bi bi-plus-circle"></i>
                </Button>
            </Tooltip>
        }
        else
        {
            <Button @onclick="() => GoToNewSubject(_currentEducationId)" class="btn-success px-1" style="margin-left: 12px; width: 135px">
                New Subject <i class="bi bi-plus-circle"></i>
            </Button>
        }
    }
</div>

<ScrollTopButton />

<style>
    .name-column { width: 260px; }

    .average-grade-column {
        width: 95px;
        padding-top: 11px !important;
    }

    .grades-column { width: auto; min-width: 107px; }

    .nowrap { white-space: nowrap; }
</style>

@code {
    
}