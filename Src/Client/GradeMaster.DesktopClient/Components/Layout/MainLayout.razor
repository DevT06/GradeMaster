@inherits LayoutComponentBase
@implements IAsyncDisposable
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4" style="z-index: 1100;">
            @* <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">Options</a> *@
            <!--for loading initially-->
            <ThemeSwitcher Style="visibility: hidden;" />
            <Button Color="ButtonColor.Link" Style="padding-right: 3px; padding-left: 3px;" @onclick="OnShowOffcanvasClick">Options</Button>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
    <ScrollTopButton />
</div>

<Offcanvas @ref="_offcanvas"
    title="Options"
    Style="z-index: 1500"
    Size="OffcanvasSize.Small"
    OnShowing="OnOffcanvasShowing"
    OnHiding="OnOffcanvasHiding">
    <BodyTemplate>
        <NavLink class="btn btn-translucient offcanvas-button-link border-dark-subtle" style="margin-top: 0" href="info" @onclick="OnHideOffcanvasClick"><Icon Name="IconName.InfoCircle" /> Info</NavLink>
        @* <div class="border-top" style="width: 100%;"></div> *@
        <NavLink class="btn btn-translucient offcanvas-button-link border-dark-subtle" href="licenses" @onclick="OnHideOffcanvasClick"><Icon Name="IconName.FileEarmarkText" /> Licences</NavLink>
        @* <div class="border-top" style="width: 100%;"></div> *@
        <NavLink class="btn btn-translucient offcanvas-button-link border-dark-subtle" href="faq" @onclick="OnHideOffcanvasClick"><Icon Name="IconName.QuestionCircle" /> FAQ</NavLink>
        @* <div class="border-top" style="width: 100%;"></div> *@
        <NavLink class="btn btn-translucient offcanvas-button-link border-dark-subtle" href="tipsandtricks" @onclick="OnHideOffcanvasClick"><Icon Name="IconName.Lightbulb" /> Tips & Tricks</NavLink>
    </BodyTemplate>
    <FooterTemplate>
        <NavLink class="btn btn-translucient offcanvas-button-link border-dark-subtle" style="margin-bottom: 0" href="settings" @onclick="OnHideOffcanvasClick"><Icon Name="IconName.Gear" /> Settings</NavLink>
    </FooterTemplate>
</Offcanvas>

<Toasts class="p-3" Placement="ToastsPlacement.TopRight" StackLength="2" AutoHide="true" Style="z-index: 1600"/>

@code {
    private Offcanvas _offcanvas = default!;

    private bool _offcanvasHidden = true;

    private DotNetObjectReference<MainLayout>? objRef;

    private async Task OnShowOffcanvasClick() => await _offcanvas.ShowAsync();

    private async Task OnHideOffcanvasClick() => await _offcanvas.HideAsync();

    private void OnOffcanvasHiding() => _offcanvasHidden = true;

    private void OnOffcanvasShowing() => _offcanvasHidden = false;


    protected override async Task OnInitializedAsync()
    {
        objRef = DotNetObjectReference.Create(this);
        await JSRuntime.InvokeVoidAsync("addPageKeybinds", "MainLayoutPage", objRef);
    }

    #region JSInvokable / Keybinds

    [JSInvokable]
    public async Task ToggleOffCanvas()
    {
        if (_offcanvasHidden)
        {
            await OnShowOffcanvasClick();
        }
        else
        {
            await OnHideOffcanvasClick();
        }
    }

    // Navigation to main pages

    [JSInvokable]
    public void GoToHomePage() => Navigation.NavigateTo("/?");

    [JSInvokable]
    public void GoToEducationsPage() => Navigation.NavigateTo("/educations");

    [JSInvokable]
    public void GoToSubjectsPage() => Navigation.NavigateTo("/subjects");

    [JSInvokable]
    public void GoToGradesPage() => Navigation.NavigateTo("/grades");

    [JSInvokable]
    public void GoToSettingsPage() => Navigation.NavigateTo("/settings");

    #endregion

    public async ValueTask DisposeAsync()
    {
        await JSRuntime.InvokeVoidAsync("removePageKeybinds", "MainLayoutPage");
        objRef?.Dispose();
    }
}
