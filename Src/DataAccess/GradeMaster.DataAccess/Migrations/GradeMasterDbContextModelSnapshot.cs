// <auto-generated />
using System;
using GradeMaster.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GradeMaster.DataAccess.Migrations
{
    [DbContext(typeof(GradeMasterDbContext))]
    partial class GradeMasterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("GradeMaster.Common.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(125)
                        .IsUnicode(true)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name")
                        .UseCollation("NOCASE");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(true)
                        .HasColumnType("TEXT")
                        .HasColumnName("Symbol")
                        .UseCollation("NOCASE");

                    b.HasKey("Id");

                    b.ToTable("Colors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gray",
                            Symbol = "🔘"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Red",
                            Symbol = "🔴"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Orange",
                            Symbol = "🟠"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Yellow",
                            Symbol = "🟡"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Green",
                            Symbol = "🟢"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Blue",
                            Symbol = "🔵"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Purple",
                            Symbol = "🟣"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Brown",
                            Symbol = "🟤"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Black",
                            Symbol = "⚫"
                        },
                        new
                        {
                            Id = 10,
                            Name = "White",
                            Symbol = "⚪"
                        });
                });

            modelBuilder.Entity("GradeMaster.Common.Entities.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Completed");

                    b.Property<string>("Description")
                        .HasMaxLength(2500)
                        .IsUnicode(true)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description")
                        .UseCollation("NOCASE");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("EndDate");

                    b.Property<string>("Institution")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("TEXT")
                        .HasColumnName("Institution")
                        .UseCollation("NOCASE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name")
                        .UseCollation("NOCASE");

                    b.Property<int>("Semesters")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Semesters");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("StartDate");

                    b.HasKey("Id");

                    b.ToTable("Educations", (string)null);
                });

            modelBuilder.Entity("GradeMaster.Common.Entities.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("Date");

                    b.Property<string>("Description")
                        .HasMaxLength(2500)
                        .IsUnicode(true)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description")
                        .UseCollation("NOCASE");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(3, 2)")
                        .HasColumnName("Value");

                    b.Property<int>("WeightId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("WeightId");

                    b.ToTable("Grades", (string)null);
                });

            modelBuilder.Entity("GradeMaster.Common.Entities.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int>("ColorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasMaxLength(10000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT")
                        .HasColumnName("Content")
                        .UseCollation("NOCASE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedAt");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsArchived");

                    b.Property<bool>("IsPinned")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsPinned");

                    b.Property<string>("Tags")
                        .HasMaxLength(510)
                        .IsUnicode(true)
                        .HasColumnType("TEXT")
                        .HasColumnName("Tags")
                        .UseCollation("NOCASE");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("TEXT")
                        .HasColumnName("Title")
                        .UseCollation("NOCASE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.ToTable("Notes", (string)null);
                });

            modelBuilder.Entity("GradeMaster.Common.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Completed");

                    b.Property<string>("Description")
                        .HasMaxLength(2500)
                        .IsUnicode(true)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description")
                        .UseCollation("NOCASE");

                    b.Property<int>("EducationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name")
                        .UseCollation("NOCASE");

                    b.Property<int>("Semester")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Semester");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.ToTable("Subjects", (string)null);
                });

            modelBuilder.Entity("GradeMaster.Common.Entities.Weight", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(7, 5)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.ToTable("Weights", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "100%",
                            Value = 1m
                        },
                        new
                        {
                            Id = 2,
                            Name = "90%",
                            Value = 0.9m
                        },
                        new
                        {
                            Id = 3,
                            Name = "87.5%",
                            Value = 0.875m
                        },
                        new
                        {
                            Id = 5,
                            Name = "80%",
                            Value = 0.8m
                        },
                        new
                        {
                            Id = 6,
                            Name = "75%",
                            Value = 0.75m
                        },
                        new
                        {
                            Id = 7,
                            Name = "70%",
                            Value = 0.7m
                        },
                        new
                        {
                            Id = 8,
                            Name = "66.7%",
                            Value = 0.66667m
                        },
                        new
                        {
                            Id = 9,
                            Name = "62.5%",
                            Value = 0.625m
                        },
                        new
                        {
                            Id = 10,
                            Name = "60%",
                            Value = 0.6m
                        },
                        new
                        {
                            Id = 11,
                            Name = "50%",
                            Value = 0.5m
                        },
                        new
                        {
                            Id = 12,
                            Name = "40%",
                            Value = 0.4m
                        },
                        new
                        {
                            Id = 13,
                            Name = "37.5%",
                            Value = 0.375m
                        },
                        new
                        {
                            Id = 14,
                            Name = "33.3%",
                            Value = 0.33333m
                        },
                        new
                        {
                            Id = 15,
                            Name = "30%",
                            Value = 0.3m
                        },
                        new
                        {
                            Id = 16,
                            Name = "25%",
                            Value = 0.25m
                        },
                        new
                        {
                            Id = 17,
                            Name = "20%",
                            Value = 0.2m
                        },
                        new
                        {
                            Id = 18,
                            Name = "12.5%",
                            Value = 0.125m
                        },
                        new
                        {
                            Id = 19,
                            Name = "10%",
                            Value = 0.1m
                        });
                });

            modelBuilder.Entity("GradeMaster.Common.Entities.Grade", b =>
                {
                    b.HasOne("GradeMaster.Common.Entities.Subject", "Subject")
                        .WithMany("Grades")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GradeMaster.Common.Entities.Weight", "Weight")
                        .WithMany("Grades")
                        .HasForeignKey("WeightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Weight");
                });

            modelBuilder.Entity("GradeMaster.Common.Entities.Note", b =>
                {
                    b.HasOne("GradeMaster.Common.Entities.Color", "Color")
                        .WithMany("Notes")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");
                });

            modelBuilder.Entity("GradeMaster.Common.Entities.Subject", b =>
                {
                    b.HasOne("GradeMaster.Common.Entities.Education", "Education")
                        .WithMany("Subjects")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");
                });

            modelBuilder.Entity("GradeMaster.Common.Entities.Color", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("GradeMaster.Common.Entities.Education", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("GradeMaster.Common.Entities.Subject", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("GradeMaster.Common.Entities.Weight", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
