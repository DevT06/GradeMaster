@page "/"

<h1>Home</h1>

<div class="row bd-navbar sticky-top py-3 mx-0">
    <div class="col-10 col-md-6 px-0" style="max-width: 400px">
        <select class="form-select" style="min-width: 200px; max-width: 400px" aria-label="Default select example" name="selectFieldEducation" id="selectFieldEducation"
                @onchange="ChangeEducation">
            <option value="">Select Education</option>
            @foreach (var education in _educations)
            {
                <option value="@education.Id">@education.Name</option>
            }
        </select>
    </div>
    <!--Add edit and detail button later-->
    <div class="col-2 col-md-1">
        <NavLink href="/education/create" class="btn btn-secondary px-2" style="height: 38px; padding-top: 3px;">
            @* <i class="bi bi-plus-circle" style="font-size: 20px"></i> *@
            <Icon Name="IconName.PlusCircle" Size="IconSize.x5"/>
        </NavLink>
    </div>
    <div class="col-12 col-md-5 text-end ms-auto">
        <h3>Education Average: </h3>
    </div>
</div>

<div class="row py-5">
    <Grid TItem="Subject"
          Class="table table-hover"
          Data="@_subjects"
          EmptyText="No records to display"
          HeaderRowCssClass="border-bottom-0"
          Responsive="true">

        <GridColumns>
            <GridColumn TItem="Subject" HeaderText="Subject" PropertyName="Name" Class="name-column">
                @context.Name
            </GridColumn>
            <GridColumn TItem="Subject" HeaderText="Grades" SortKeySelector="item => item.Grades != null ? item.Grades.Count : 0" Class="grades-column">
                @string.Join(", ", @context.Grades != null ? @context.Grades.Select(g => g.Value) : Enumerable.Empty<decimal>())
            </GridColumn>
            <GridColumn TItem="Subject" HeaderText="Average" SortKeySelector="item => item.Grades != null ? item.Grades.Average(g => g.Value) : 0" HeaderTextAlignment="Alignment.End" TextAlignment="Alignment.Center" Class="average-grade-column">
                @GetAverageGrade(context.Grades)
            </GridColumn>
        </GridColumns>
    </Grid>
</div>

<style>
    .name-column {
        width: 200px;
    }

    .average-grade-column {
        width: 100px;
    }

    .grades-column {
        width: auto;
    }
</style>

@code
{
    private List<Education> _educations = new();
    private List<Subject> _subjects = new();

    [Inject] private IEducationRepository EducationRepository { get; set; }
    [Inject] private ISubjectRepository SubjectRepository { get; set; }

    [Inject] private NavigationManager Navigation { get; set; }


    protected override async Task OnInitializedAsync()
    {
        _educations = await EducationRepository.GetAllAsync();
    }

    private async Task ChangeEducation(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int educationId))
        {
            _subjects = await SubjectRepository.GetByEducationIdAsync(educationId);
        }
        else
        {
            _subjects = new List<Subject>();
        }
    }

    private string GetAverageGrade(ICollection<Grade> grades)
    {
        if (grades != null && grades.Any())
        {
            return grades.Average(g => g.Value).ToString("F2");
        }
        return "N/A";
    }
}