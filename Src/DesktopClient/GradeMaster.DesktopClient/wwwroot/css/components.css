/* Global CSS-Document for razor components */

.component-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 1rem;
    position: relative;
    transition: all 0.3s ease; /* Smooth transition for grid reflow */
}

    .component-card-grid > * {
        transition: transform 0.3s ease, opacity 0.3s ease; /* Smooth transition for position and opacity changes */
        will-change: transform, opacity; /* Hint the browser for better animation performance */
    }

/* Keyframe animation for a smooth "appear" effect */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: scale(0.95); /*was 0.9*/
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
}

.component-card-grid > *:enter {
    animation: fadeIn 0.3s ease;
}

/*.component-card-grid > *:leave {
    animation: fadeOut 0.3s ease;
}*/

.animated-card {
    animation: fadeIn 0.15s ease;
    transition: transform 0.3s ease, opacity 0.3s ease;
}

/*.grid-reflow > * {
    transition: transform 0.3s ease, opacity 0.3s ease;
}*/

/*.component-card-grid > *:not([style*="position"]) {
    grid-column: span 1;*/ /* Ensure actual content cards span 1 column */
/*}

.component-card-grid > *:not([style*="position"]):only-child {
    grid-column: span 3;*/ /* Single card spans all columns */
/*}

.component-card-grid > *:not([style*="position"]):nth-child(2):last-child {
    grid-column: span 2;*/ /* If only 2 cards, last card spans 2 columns */
/*}*/

/*.component-card-grid > * {
    transition: all 0.2s ease-in-out;
}*/

.offcanvas-button-link {
    width: 100%;
    margin-bottom: 10px;
    margin-top: 10px;
    font-size: 20px;
}

.topPageHeader {
}

@media (min-width: 641px) {
    .topPageHeader {
        font-size: 2.25rem;
        top: 5px;
        position: sticky;
        z-index: 20;
        max-width: 250px;
    }
}
